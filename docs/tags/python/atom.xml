<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Biao J.&#x27;s Online Portfolio - python</title>
    <subtitle>Hi, I&#x27;m a senior data scientist, researcher. I exclusively utilize Rust, Go, and Python for their distinct strengths in various tasks. Additionally, I harness the potent capabilities of LaTeX&#x2F;TikZ to produce visually stunning and insightful technical documents.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://plotsignal.com/tags/python/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://plotsignal.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-07-07T08:00:00+00:00</updated>
    <id>https://plotsignal.com/tags/python/atom.xml</id>
    <entry xml:lang="en">
        <title>Organize Your Screenshot PNG Files by Adding Timestamps</title>
        <published>2024-07-07T08:00:00+00:00</published>
        <updated>2024-07-07T08:00:00+00:00</updated>
        
        <author>
          <name>
            Biao Jiang
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://plotsignal.com/blog/timestamp-to-exif/"/>
        <id>https://plotsignal.com/blog/timestamp-to-exif/</id>
        
        <content type="html" xml:base="https://plotsignal.com/blog/timestamp-to-exif/">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;a class=&quot;zola-anchor&quot; href=&quot;#introduction&quot; aria-label=&quot;Anchor link for: introduction&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;If you frequently take screenshots, you might have noticed that when these files are uploaded to cloud storage services like Dropbox, they can become disorganized. This is because screenshots often lack proper creation timestamps in their metadata, causing all files to appear as if they were created on the upload date. This post introduces a solution to this problem using a Python script that adds accurate creation timestamps to the EXIF metadata of your PNG files.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-problem&quot; aria-label=&quot;Anchor link for: the-problem&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Screenshots are a convenient way to capture important information quickly. However, when you upload these screenshots to cloud storage services such as Dropbox, they often lack the proper creation timestamp in their metadata. As a result:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Disorganization&lt;&#x2F;strong&gt;: Screenshots appear as if they were all taken on the same day, making it difficult to locate specific images.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Clutter&lt;&#x2F;strong&gt;: Cloud storage services display all recently uploaded screenshots together, even if they were initially taken years apart.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Inaccurate Sorting&lt;&#x2F;strong&gt;: Screenshots are sorted by upload date rather than the actual date, leading to confusion.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;a class=&quot;zola-anchor&quot; href=&quot;#the-solution&quot; aria-label=&quot;Anchor link for: the-solution&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;To solve this issue, we created a Python script that extracts timestamps from screenshot filenames and updates the EXIF metadata and file modification times. This ensures that your screenshots are organized correctly according to when they were actually taken, not just when they were uploaded.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;How It Works&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-it-works&quot; aria-label=&quot;Anchor link for: how-it-works&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;The script processes PNG files, extracts timestamps from their filenames, and updates the EXIF metadata fields &lt;code&gt;DateTimeOriginal&lt;&#x2F;code&gt; and &lt;code&gt;DateTimeDigitized&lt;&#x2F;code&gt;. It also adjusts the file modification time to include the correct timezone offset.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;supported-filename-patterns&quot;&gt;Supported Filename Patterns&lt;a class=&quot;zola-anchor&quot; href=&quot;#supported-filename-patterns&quot; aria-label=&quot;Anchor link for: supported-filename-patterns&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;The script supports the following filename patterns to extract timestamps:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;screenshot_YYYY-MM-DD-HH-MM-SSpng_XXXXXXXXXXX.png&lt;&#x2F;code&gt; (Google Photos make this)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Screenshot YYYY-MM-DD at HH.MM.SS.png&lt;&#x2F;code&gt; (usually made by Mac)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;features&quot;&gt;Features&lt;a class=&quot;zola-anchor&quot; href=&quot;#features&quot; aria-label=&quot;Anchor link for: features&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Batch Processing&lt;&#x2F;strong&gt;: Process all PNG files in a specified folder.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Single File Processing&lt;&#x2F;strong&gt;: Process a single PNG file.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Timezone Adjustment&lt;&#x2F;strong&gt;: Automatically adjusts timestamps to the specified timezone.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;a class=&quot;zola-anchor&quot; href=&quot;#usage&quot; aria-label=&quot;Anchor link for: usage&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;command-line-arguments&quot;&gt;Command-Line Arguments&lt;a class=&quot;zola-anchor&quot; href=&quot;#command-line-arguments&quot; aria-label=&quot;Anchor link for: command-line-arguments&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;&#x2F;code&gt;: Path to a folder or a single PNG file.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;--timezone&lt;&#x2F;code&gt;: Timezone for file modification time (default: &lt;code&gt;Europe&#x2F;Stockholm&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;--batch&lt;&#x2F;code&gt;: Process all PNG files in the folder (default: &lt;code&gt;True&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;a class=&quot;zola-anchor&quot; href=&quot;#examples&quot; aria-label=&quot;Anchor link for: examples&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;batch-processing-all-png-files-in-a-folder&quot;&gt;Batch Processing (All PNG Files in a Folder)&lt;a class=&quot;zola-anchor&quot; href=&quot;#batch-processing-all-png-files-in-a-folder&quot; aria-label=&quot;Anchor link for: batch-processing-all-png-files-in-a-folder&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;To process all PNG files in a folder with the default timezone (&lt;code&gt;Europe&#x2F;Stockholm&lt;&#x2F;code&gt;):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt; timestamp_to_exif.py &#x2F;path&#x2F;to&#x2F;folder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --batch
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To specify a different timezone:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt; timestamp_to_exif.py &#x2F;path&#x2F;to&#x2F;folder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --batch --timezone&lt;&#x2F;span&gt;&lt;span&gt; America&#x2F;New_York
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;single-file-processing&quot;&gt;Single File Processing&lt;a class=&quot;zola-anchor&quot; href=&quot;#single-file-processing&quot; aria-label=&quot;Anchor link for: single-file-processing&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h4&gt;
&lt;p&gt;To process a single PNG file with the default timezone (Europe&#x2F;Stockholm):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt; timestamp_to_exif.py &#x2F;path&#x2F;to&#x2F;file.png&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --batch&lt;&#x2F;span&gt;&lt;span&gt; False
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To specify a different timezone:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt; timestamp_to_exif.py &#x2F;path&#x2F;to&#x2F;file.png&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --batch&lt;&#x2F;span&gt;&lt;span&gt; False&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --timezone&lt;&#x2F;span&gt;&lt;span&gt; America&#x2F;New_York
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;a class=&quot;zola-anchor&quot; href=&quot;#conclusion&quot; aria-label=&quot;Anchor link for: conclusion&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;By adding accurate timestamps to the EXIF metadata of your screenshot PNG files, this script ensures that your images are properly organized and easy to find in your cloud storage. Say goodbye to cluttered Dropbox folders and enjoy a more streamlined, efficient way of managing your screenshots.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;get-the-script&quot;&gt;Get the Script&lt;a class=&quot;zola-anchor&quot; href=&quot;#get-the-script&quot; aria-label=&quot;Anchor link for: get-the-script&quot;&gt;
    &lt;svg class=&quot;zola-anchor-link&quot; viewBox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; width=&quot;16&quot; height=&quot;16&quot; aria-hidden=&quot;true&quot;&gt;
        &lt;path fill-rule=&quot;evenodd&quot;
            d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;&gt;
        &lt;&#x2F;path&gt;
    &lt;&#x2F;svg&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;You can find the &lt;code&gt;timestamp_to_exif.py&lt;&#x2F;code&gt; script and detailed instructions &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;biaojiang&#x2F;mylib&#x2F;blob&#x2F;main&#x2F;py&#x2F;timestamp_to_exif.py&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Comprehensive Solutions to LeetCode and HackerRank Challenges in Rust, Go, and Python</title>
        <published>2024-02-12T08:00:00+00:00</published>
        <updated>2024-02-12T08:00:00+00:00</updated>
        
        <author>
          <name>
            Biao Jiang
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://plotsignal.com/projects/algorithms/"/>
        <id>https://plotsignal.com/projects/algorithms/</id>
        
        <content type="html" xml:base="https://plotsignal.com/projects/algorithms/">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;LeetCode and HackerRank are popular platforms for practicing coding and improving problem-solving skills. To assist developers in mastering these platforms, we have developed a comprehensive repository containing solutions to various algorithms and challenges implemented in Rust, Go, and Python. This repository serves as an excellent resource for learning and reference.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;&#x2F;h2&gt;
&lt;p&gt;Many developers face challenges when learning new programming languages or tackling complex problems on platforms like LeetCode and HackerRank. Common issues include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Language Proficiency&lt;&#x2F;strong&gt;: Difficulty understanding and implementing solutions in different programming languages.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Algorithmic Complexity&lt;&#x2F;strong&gt;: Struggles with grasping the concepts behind algorithms and their implementations.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Lack of Resources&lt;&#x2F;strong&gt;: Limited access to well-documented and diverse solution examples for the same problem in multiple languages.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;&#x2F;h2&gt;
&lt;p&gt;To address these issues, we created a GitHub repository named &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;biaojiang&#x2F;leetcode&quot;&gt;leetcode&lt;&#x2F;a&gt; that contains solutions to a wide range of LeetCode and HackerRank problems implemented in Rust, Go, and Python. This repository is designed to help keep continuous learning and improvement:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improve Multi-language Proficiency&lt;&#x2F;strong&gt;: Learn to solve the same problem using different programming languages.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Understand Algorithms&lt;&#x2F;strong&gt;: Gain insights into various algorithms and their implementations.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Access Quality Resources&lt;&#x2F;strong&gt;: Utilize well-documented code examples for study and reference.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;repository-highlights&quot;&gt;Repository Highlights&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;leetcode&lt;&#x2F;code&gt; repository includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Diverse Problem Set&lt;&#x2F;strong&gt;: Solutions to many problems from LeetCode and HackerRank.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language Implementations&lt;&#x2F;strong&gt;: Each problem is solved in Rust, Go, and Python, providing a comprehensive learning experience.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Well-documented Code&lt;&#x2F;strong&gt;: Clear and concise documentation to help understand the implementation and logic behind each solution.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;languages-covered&quot;&gt;Languages Covered&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rust&lt;&#x2F;strong&gt;: Known for its performance and safety, Rust is an excellent language for systems programming and handling concurrency.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Go&lt;&#x2F;strong&gt;: With its simplicity and efficiency, Go is ideal for developing scalable and concurrent applications.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;&#x2F;strong&gt;: A versatile language with simple syntax, Python is widely used for web development, data analysis, artificial intelligence, and more.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h2&gt;
&lt;p&gt;To start, visit the &lt;a href=&quot;https:&#x2F;&#x2F;plotsignal.com&#x2F;leetcode&#x2F;leetcode&quot;&gt;mdBook for LeetCode&#x2F;HackerRank solutions&lt;&#x2F;a&gt;. This book provides a structured and easy-to-navigate format for exploring Rust, Go, and Python solutions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;leetcode&lt;&#x2F;code&gt; repository is an invaluable resource for developers looking to enhance their coding skills across multiple languages. Whether you are preparing for technical interviews or simply aiming to improve your algorithmic knowledge, this repository provides a wealth of examples and insights.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Implementing the Zoom FFT mixer approach in Python</title>
        <published>2018-05-06T11:15:00+00:00</published>
        <updated>2018-05-06T11:15:00+00:00</updated>
        
        <author>
          <name>
            Biao Jiang
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://plotsignal.com/projects/zoom-fft/"/>
        <id>https://plotsignal.com/projects/zoom-fft/</id>
        
        <content type="html" xml:base="https://plotsignal.com/projects/zoom-fft/">&lt;h2 id=&quot;zoom-fft&quot;&gt;Zoom FFT&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;se.mathworks.com&#x2F;help&#x2F;dsp&#x2F;examples&#x2F;zoom-fft.html&quot;&gt;Zoom FFT&lt;&#x2F;a&gt; was used to analyze a frequency subband. The idea behind zoom FFT is to retain the exact resolution, which could be achieved with a full-size FFT on the original signal, by computing a small-size FFT on a down-sampled shorter signal. Thus, the efficiency of FFT could be improved while maintaining the exact resolution.&lt;&#x2F;p&gt;
&lt;p&gt;This is intuitive: for a decimation factor of $D$, the new sampling rate is $f_{sd} = f_s&#x2F;D$, and the new frame size (and FFT length) is $L_d = L&#x2F;D$, so the resolution of the decimated signal is $f_{sd}&#x2F;L_d = f_s&#x2F;L$.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;implementation&quot;&gt;Implementation&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;the-mixer-approach&quot;&gt;The Mixer Approach&lt;&#x2F;h3&gt;
&lt;p&gt;See &lt;a href=&quot;https:&#x2F;&#x2F;se.mathworks.com&#x2F;help&#x2F;dsp&#x2F;examples&#x2F;zoom-fft.html&quot;&gt;Zoom FFT&lt;&#x2F;a&gt;: The popular mixer Zoom FFT method consists of first shifting the band of interest down to DC using a mixer and then performing lowpass filtering and decimation by a factor of BWFactor (using an efficient polyphase FIR decimation structure).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;&#x2F;strong&gt; For short signals, the polyphase FIR design is tricky. Sometimes, it will distort the spectrum. In the Matlab example, the transient filtering effects were eliminated by repeating the filtering ten times. So, the conventional Fourier resampling method is recommended here.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;python-codes&quot;&gt;Python Codes&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Import modules&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;numpy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;np
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;matplotlib &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;pyplot &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;plt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;numpy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;pi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;numpy.fft &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;fft, fftfreq, fftshift
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;scipy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;signal
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Generate signal&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;SineWave&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fs&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;amplitude&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    x = amplitude * np.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;* pi * f &#x2F; fs * np.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;arange&lt;&#x2F;span&gt;&lt;span&gt;(length))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;x
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;L = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;32
&lt;&#x2F;span&gt;&lt;span&gt;fs = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;128
&lt;&#x2F;span&gt;&lt;span&gt;res = fs&#x2F;L
&lt;&#x2F;span&gt;&lt;span&gt;f1 = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;40
&lt;&#x2F;span&gt;&lt;span&gt;f2 = f1 + res
&lt;&#x2F;span&gt;&lt;span&gt;x = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SineWave&lt;&#x2F;span&gt;&lt;span&gt;(f1, fs, L) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SineWave&lt;&#x2F;span&gt;&lt;span&gt;(f2, fs, L, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Plot the original FFT&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;X = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fft&lt;&#x2F;span&gt;&lt;span&gt;(x)
&lt;&#x2F;span&gt;&lt;span&gt;freq = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fftfreq&lt;&#x2F;span&gt;&lt;span&gt;(L, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;d&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;fs)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;fig1, ax1 = plt.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subplots&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#fig1.clf()
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stem&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fftshift&lt;&#x2F;span&gt;&lt;span&gt;(freq), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;abs&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fftshift&lt;&#x2F;span&gt;&lt;span&gt;(X)) &#x2F; L)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#ax1[0].set_xlabel(&amp;#39;Frequency (Hz)&amp;#39;, fontsize=12)
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set_ylabel&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Magnitude&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fontsize&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set_title&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Two-sided spectrum&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fontsize&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;grid&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Zoom FFT using a mixer approach&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;BWOfInterest = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;48 &lt;&#x2F;span&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;16
&lt;&#x2F;span&gt;&lt;span&gt;Fc = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;16 &lt;&#x2F;span&gt;&lt;span&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;48&lt;&#x2F;span&gt;&lt;span&gt;) &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;BWFactor = np.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;floor&lt;&#x2F;span&gt;&lt;span&gt;(fs &#x2F; BWOfInterest).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;astype&lt;&#x2F;span&gt;&lt;span&gt;(np.uint8)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# mix the signal down to DC and filter it through the FIR decimator
&lt;&#x2F;span&gt;&lt;span&gt;indVect = np.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;arange&lt;&#x2F;span&gt;&lt;span&gt;(L)
&lt;&#x2F;span&gt;&lt;span&gt;y = x * np.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;exp&lt;&#x2F;span&gt;&lt;span&gt;(-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;j &lt;&#x2F;span&gt;&lt;span&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;* pi * indVect * Fc &#x2F; fs)
&lt;&#x2F;span&gt;&lt;span&gt;xd = signal.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;resample&lt;&#x2F;span&gt;&lt;span&gt;(y, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# polyphase method as in Matlab
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#indVect = np.arange(L * 10)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#y = np.tile(x, 10) * np.exp(-1j * 2 * pi * indVect * Fc &#x2F; fs)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#beta = signal.kaiser_beta(80)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#xd = signal.resample_poly(y, up=1, down=BWFactor, window=signal.get_window((&amp;#39;kaiser&amp;#39;, beta), 6))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#xd = xd[-len(xd) &#x2F;&#x2F; 10:]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#xd = xd[-2 * len(xd) &#x2F;&#x2F; 10:-len(xd) &#x2F;&#x2F; 10]
&lt;&#x2F;span&gt;&lt;span&gt;fftlen = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(xd)
&lt;&#x2F;span&gt;&lt;span&gt;Xd = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fft&lt;&#x2F;span&gt;&lt;span&gt;(xd)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Ld  = L &#x2F; BWFactor;
&lt;&#x2F;span&gt;&lt;span&gt;fsd = fs &#x2F; BWFactor;
&lt;&#x2F;span&gt;&lt;span&gt;F   = Fc + fsd &#x2F; fftlen * np.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;arange&lt;&#x2F;span&gt;&lt;span&gt;(fftlen) - fsd &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]. &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stem&lt;&#x2F;span&gt;&lt;span&gt;(F, np.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;abs&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fftshift&lt;&#x2F;span&gt;&lt;span&gt;(Xd)) &#x2F; Ld, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;linefmt&lt;&#x2F;span&gt;&lt;span&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;C1-.&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;markerfmt&lt;&#x2F;span&gt;&lt;span&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;C1s&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;grid&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set_xlabel&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Frequency (Hz)&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fontsize&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set_ylabel&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Magnitude&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fontsize&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;ax1[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set_title&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Zoom FFT Spectrum. Mixer Approach.&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fontsize&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;fig1.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subplots_adjust&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hspace&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.35&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;result&quot;&gt;Result&lt;&#x2F;h3&gt;
&lt;p&gt;The following result is the same as in &lt;a href=&quot;https:&#x2F;&#x2F;se.mathworks.com&#x2F;help&#x2F;dsp&#x2F;examples&#x2F;zoom-fft.html&quot;&gt;Zoom FFT&lt;&#x2F;a&gt; but much faster.&lt;&#x2F;p&gt;
&lt;!-- templates&#x2F;shortcodes&#x2F;imshow_rel.html, show relative scaled image --&gt;

    
    
    



 &lt;!-- no resize to keep picture sharp--&gt;






&lt;figure&gt;
  &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;plotsignal.com&amp;#x2F;processed_images&amp;#x2F;zoom_fft_mixer_approach.bd40e35e6b874531.png&quot;alt=&quot;Zoom-FFT with the mixer approach&quot;
    title=&quot;Zoom-FFT with the mixer approach&quot;
  &#x2F;&gt;&lt;figcaption&gt;Zoom-FFT with the mixer approach&lt;&#x2F;figcaption&gt;&lt;&#x2F;figure&gt;

</content>
        
    </entry>
</feed>
